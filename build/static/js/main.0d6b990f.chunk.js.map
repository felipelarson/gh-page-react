{"version":3,"sources":["assets/img sync /^/.//.*$","assets/img/1.jpg","assets/img/2.jpg","assets/img/3.jpg","assets/img/4.jpg","assets/img/5.jpg","components/Header.jsx","components/FileList.jsx","App.jsx","index.jsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CssTextField","withStyles","root","color","borderBottomColor","borderColor","TextField","Header","props","search","bind","event","fileName","target","files","name","this","addFile","$","hide","term","val","searchFile","removeClass","className","folderName","label","type","variant","placeholder","onChange","Component","FileList","state","activeDrags","deltaPosition","x","y","controlledPosition","handleDrag","ui","setState","deltaX","deltaY","console","log","adjustXPos","preventDefault","stopPropagation","adjustYPos","onControlledDrag","position","onControlledDragStop","onStop","fileInput","submitForm","show","focus","index","loadFiles","addFolder","deleteFolder","addClass","css","display","deleteFile","dragHandlers","onStart","Grid","container","folders","value","key","style","margin","onClick","closeAlbum","FormControl","Input","aria-describedby","item","lg","md","href","require","rel","src","alt","justifyContent","width","alignItens","removeFile","fontSize","marginTop","Button","background","minWidth","startIcon","showFileBox","height","disableElevation","removeFolder","showForm","fullWidth","onSubmit","border","App","currentFolder","updateStorage","localStorage","getItem","JSON","parse","push","parseInt","splice","json","stringify","setItem","forEach","indexOf","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d6b990f.chunk.js","sourcesContent":["var map = {\n\t\"./1.jpg\": 77,\n\t\"./2.jpg\": 78,\n\t\"./3.jpg\": 79,\n\t\"./4.jpg\": 80,\n\t\"./5.jpg\": 81\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 49;","module.exports = __webpack_public_path__ + \"static/media/1.f81628e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.a402ddce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.8be2c0fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.e653297f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.0ff11d87.jpg\";","import React, { Component } from \"react\";\nimport $ from \"jquery\";\n//import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst CssTextField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"white\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"white\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"white\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"white\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"white\",\n      },\n    },\n  },\n})(TextField);\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.search = this.search.bind(this);\n  }\n\n  fileInput(event) {\n    let file = event.target.files[0];\n    let fileName = file.name;\n    this.props.addFile(fileName);\n    $(\"#new-file-box\").hide();\n  }\n\n  search(event) {\n    let term = $(event.target).val();\n    this.props.searchFile(term);\n    $(\".folder-link\").removeClass(\"active-folder\");\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <div className=\"header-left\">\n          <h2>\n            Album atual: <span id=\"folder-name\">{this.props.folderName}</span>\n          </h2>\n        </div>\n        <div className=\"header-right\">\n          <div id=\"search-form\">\n            <CssTextField\n              id=\"search\"\n              label=\"Buscar pasta\"\n              type=\"search\"\n              variant=\"outlined\"\n              placeholder=\"Buscar pasta\"\n              onChange={this.search}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\n\nimport { Grid, Button, FormControl, Input } from \"@material-ui/core\";\n\nimport Draggable from \"react-draggable\";\nimport $ from \"jquery\";\n\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nclass FileList extends Component {\n  constructor(props) {\n    super(props);\n    this.fileInput = this.fileInput.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  showForm() {\n    $(\"#new-folder-form\").show();\n    $(\"#new-folder-field\").focus();\n  }\n\n  showFileBox(index, event) {\n    event.stopPropagation();\n    this.props.loadFiles(index);\n    event.stopPropagation();\n    $(\"#new-file-box\").show();\n  }\n\n  closeAlbum(e) {\n    e.stopPropagation();\n    $(\"#new-file-box\").hide();\n  }\n\n  submitForm(e) {\n    e.preventDefault();\n    let folderName = $(\"#new-folder-field\").val();\n    //this.props.folders.push({ name: folderName, files: [] });\n    this.props.addFolder(folderName);\n    $(\"#new-folder-field\").val(\"\");\n    $(\"#new-folder-form\").hide();\n  }\n\n  removeFolder(index, event) {\n    event.stopPropagation();\n    this.props.deleteFolder(index);\n  }\n\n  showFolder(index, event) {\n    this.props.loadFiles(index);\n    $(\".folder-link\").removeClass(\"active-folder\");\n    $(event.target).addClass(\"active-folder\");\n    $(\".work-button\").css({ display: \"inline-block\" });\n  }\n\n  removeFile(index) {\n    this.props.deleteFile(index);\n  }\n\n  fileInput(event) {\n    let file = event.target.files[0];\n    let fileName = file.name;\n    this.props.addFile(fileName);\n  }\n\n  state = {\n    activeDrags: 0,\n    deltaPosition: {\n      x: 0,\n      y: 0,\n    },\n    controlledPosition: {\n      x: 0,\n      y: 0,\n    },\n  };\n\n  handleDrag = (e, ui) => {\n    const { x, y } = this.state.deltaPosition;\n    this.setState({\n      deltaPosition: {\n        x: x + ui.deltaX,\n        y: y + ui.deltaY,\n      },\n    });\n    console.log(e);\n  };\n\n  // onStart = () => {\n  //   this.setState({ activeDrags: ++this.state.activeDrags });\n  // };\n\n  // onStop = () => {\n  //   this.setState({ activeDrags: --this.state.activeDrags });\n  // };\n\n  // For controlled component\n  adjustXPos = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const { x, y } = this.state.controlledPosition;\n    this.setState({ controlledPosition: { x: x - 10, y } });\n  };\n\n  adjustYPos = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    const { controlledPosition } = this.state;\n    const { x, y } = controlledPosition;\n    this.setState({ controlledPosition: { x, y: y - 10 } });\n  };\n\n  onControlledDrag = (e, position) => {\n    const { x, y } = position;\n    this.setState({ controlledPosition: { x, y } });\n  };\n\n  onControlledDragStop = (e, position) => {\n    this.onControlledDrag(e, position);\n    this.onStop();\n  };\n\n  render() {\n    const dragHandlers = { onStart: this.onStart, onStop: this.onStop };\n    // const { deltaPosition, controlledPosition } = this.state;\n\n    return (\n      <Grid container id=\"file-list\" className=\"box\">\n        <div className=\"folder-list\" id=\"folder-list\"></div>\n        {this.props.folders.map((value, index) => {\n          //console.log(index +\" = \"+ value.files);\n          return (\n            <div key={index} style={{ margin: 10 }}>\n              <div id=\"new-file-box\">\n                <Draggable {...dragHandlers}>\n                  <div className=\"file-box-content\">\n                    <div className=\"file-box-title\">\n                      {this.props.folderName}\n                      <HighlightOffIcon onClick={this.closeAlbum} />\n                    </div>\n                    <FormControl id=\"new-file-form\">\n                      <Input\n                        name=\"userfile[]\"\n                        type=\"file\"\n                        id=\"file\"\n                        aria-describedby=\"my-helper-text\"\n                        onChange={this.fileInput}\n                      />\n                    </FormControl>\n                    \n\n                    <Grid container id=\"file-list\">\n                      {this.props.files.map((value, index) => {\n                        return (\n                          <Grid item lg={2} md={4} key={index}>\n                            <a\n                              href={require(\"../assets/img/\" + value)}\n                              className=\"file\"\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n                              <img\n                                src={require(\"../assets/img/\" + value)}\n                                alt=\"\"\n                              />\n                              <div\n                                style={{\n                                  display: \"flex\",\n                                  justifyContent: \"space-between\",\n                                  width: \"100%\",\n                                  alignItens: \"center\",\n                                }}\n                              >\n                                <h6 className=\"file-text\">{value}</h6>\n                                <DeleteForeverIcon\n                                  color=\"secondary\"\n                                  onClick={this.removeFile.bind(this, index)}\n                                  style={{ fontSize: \"16px\", marginTop: \"5px\" }}\n                                />\n                              </div>\n                            </a>\n                          </Grid>\n                        );\n                      })}\n                    </Grid>\n                  </div>\n                </Draggable>\n              </div>\n\n              <Button\n                style={{ background: \"#5444e0\", minWidth: 100 }}\n                variant=\"contained\"\n                className={\"folder-link\"}\n                startIcon={<PermMediaIcon />}\n                onClick={this.showFileBox.bind(this, index)}\n                //onClick={this.showFolder.bind(this, index)}\n              >\n                {value.name}\n              </Button>\n\n              <Button\n                style={{ height: 14 }}\n                disableElevation\n                variant=\"contained\"\n                className=\"file-delete\"\n                onClick={this.removeFolder.bind(this, index)}\n              >\n                <DeleteOutlineIcon\n                  style={{ fontSize: 14, color: \"gray\", width: \"50%\" }}\n                />\n              </Button>\n            </div>\n          );\n        })}\n        <div id=\"new-folder\" onClick={this.showForm}>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            startIcon={<AddCircleOutlineIcon />}\n          >\n            Album\n          </Button>\n          <form id=\"new-folder-form\" onSubmit={this.submitForm}>\n            <input\n              type=\"text\"\n              id=\"new-folder-field\"\n              placeholder=\"Nome do Album\"\n              style={{ border: \"1px solir #fff\" }}\n            />\n          </form>\n        </div>\n      </Grid>\n    );\n  }\n}\n\nexport default FileList;\n","import React from \"react\";\n\nimport Header from \"./components/Header\";\nimport FileList from \"./components/FileList\";\nimport \"./assets/css/main.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      folders: [],\n      files: [],\n      currentFolder: false,\n      folderName: \"\",\n    };\n\n    this.addFolder = this.addFolder.bind(this);\n    this.deleteFolder = this.deleteFolder.bind(this);\n    this.updateStorage = this.updateStorage.bind(this);\n    this.loadFiles = this.loadFiles.bind(this);\n    this.addFile = this.addFile.bind(this);\n    this.deleteFile = this.deleteFile.bind(this);\n    this.searchFile = this.searchFile.bind(this);\n  }\n\n  /*\n   * After Mount\n   */\n  componentDidMount() {\n    if (localStorage.getItem(\"folders\")) {\n      this.setState({ folders: JSON.parse(localStorage.getItem(\"folders\")) })\n    }\n  }\n\n  /*\n   * Add Folders\n   */\n  addFolder(folderName) {\n    let folders = this.state.folders;\n    folders.push({ name: folderName, files: [] });\n    this.setState({ folders: folders });\n    this.updateStorage();\n  }\n\n  /*\n   * Delete Folder\n   */\n  deleteFolder(key) {\n    key = parseInt(key);\n    let folders = this.state.folders;\n    folders.splice(key, 1);\n    this.setState({ folders: folders });\n    this.updateStorage();\n  }\n\n  /*\n   * update localStorage\n   */\n  updateStorage() {\n    let json = JSON.stringify(this.state.folders);\n    localStorage.setItem(\"folders\", json);\n  }\n\n  /*\nLoad Files\n*/\n  loadFiles(index) {\n    let folders = this.state.folders;\n    this.setState({\n      files: folders[index].files,\n      folderName: folders[index].name,\n      currentFolder: index,\n    });\n  }\n\n  /*\n   * Add File\n   */\n  addFile(fileName) {\n    let folders = this.state.folders;\n    folders[this.state.currentFolder].files.push(fileName);\n    this.setState({\n      folders: folders,\n      files: folders[this.state.currentFolder].files,\n    });\n    this.updateStorage();\n  }\n\n  /*\n   * DeleteFile\n   */\n  deleteFile(index) {\n    let folders = this.state.folders;\n    folders[this.state.currentFolder].files.splice(index, 1);\n    this.setState({\n      folders: folders,\n      files: folders[this.state.currentFolder].files,\n    });\n    this.updateStorage();\n  }\n\n  /*\n   * Search File\n   */\n  searchFile(term) {\n    this.setState({ currentFolder: false, folderName: \"Busca\" });\n\n    var found = [];\n    \n    this.state.folders.forEach((item) => {\n      if(item.name.indexOf(term) !== -1) {\n        console.log(item);\n      }        \n    });\n    this.setState({ folders: found });\n  }\n\n  /*\n   * Render\n   */\n  render() {\n    return (\n      <div className=\"main-container\">\n        {/* <div className=\"column-left\">\n          <Sidebar\n            folders={this.state.folders}\n            addFolder={this.addFolder}\n            deleteFolder={this.deleteFolder}\n            loadFiles={this.loadFiles}\n          />\n        </div> */}\n\n        <div className=\"column-right\">\n          <Header\n            folderName={this.state.folderName}\n            // addFile={this.addFile}\n            searchFile={this.searchFile}\n          />\n\n          <div className=\"work-area\" lg={4}>\n            <FileList \n              files={this.state.files} \n              addFile={this.addFile}\n              loadFiles={this.loadFiles}\n              deleteFile={this.deleteFile}\n              \n              folders={this.state.folders}\n              addFolder={this.addFolder}\n              deleteFolder={this.deleteFolder}\n              folderName={this.state.folderName}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}